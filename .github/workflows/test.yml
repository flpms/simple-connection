name: Running Tests

on:
  workflow_call

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@main
      - name: Prepare serve env
        run: |
          echo MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME >> .env
          echo MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD >> .env
          echo MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE >> .env
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{vars.MONGO_INITDB_ROOT_USERNAME}}
          MONGO_INITDB_ROOT_PASSWORD: ${{secrets.MONGO_INITDB_ROOT_PASSWORD}}
          MONGO_INITDB_DATABASE: ${{vars.MONGO_INITDB_DATABASE}}
      - name: Build
        run: docker build . -t simple-connection
  unit-test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [20.x, 21.x, 22.x]
    steps:
      - uses: actions/checkout@v3
      - name: npm CI
        run: npm ci
      - name: Running Unit Test
        run: npm run test:coverage
  test-integration:
    runs-on: ubuntu-20.04
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Prepare serve env
        run: |
          echo MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME >> .env
          echo MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD >> .env
          echo MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE >> .env
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{vars.MONGO_INITDB_ROOT_USERNAME}}
          MONGO_INITDB_ROOT_PASSWORD: ${{secrets.MONGO_INITDB_ROOT_PASSWORD}}
          MONGO_INITDB_DATABASE: ${{vars.MONGO_INITDB_DATABASE}}
      - run: docker-compose up -d
      - name: npm CI
        run: npm ci
      - name: Running Integration Test
        run: npm run test:e2e

